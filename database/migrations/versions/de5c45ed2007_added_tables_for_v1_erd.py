"""added tables for v1 erd

Revision ID: de5c45ed2007
Revises: 
Create Date: 2024-01-28 19:24:25.501931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'de5c45ed2007'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instructors',
    sa.Column('instructor_id', sa.UUID(), nullable=False),
    sa.Column('instructor_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('verified_email', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('user_type', sa.Enum('ADMIN', 'MOD', 'STUDENT', 'INSTRUCTOR', name='usertype'), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('father_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('instructor_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('interests',
    sa.Column('interest_id', sa.UUID(), nullable=False),
    sa.Column('interest_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('interest_id')
    )
    op.create_table('programs',
    sa.Column('program_id', sa.UUID(), nullable=False),
    sa.Column('program_name', sa.String(), nullable=False),
    sa.Column('program_description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('program_id')
    )
    op.create_table('qualifications',
    sa.Column('qualification_id', sa.UUID(), nullable=False),
    sa.Column('qualification_name', sa.String(), nullable=False),
    sa.Column('qualification_start_date', sa.String(), nullable=False),
    sa.Column('qualification_end_date', sa.String(), nullable=False),
    sa.Column('qualification_institute', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('qualification_id')
    )
    op.create_table('universities',
    sa.Column('university_id', sa.UUID(), nullable=False),
    sa.Column('university_name', sa.String(), nullable=False),
    sa.Column('university_description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('university_id')
    )
    op.create_table('courses',
    sa.Column('course_id', sa.UUID(), nullable=False),
    sa.Column('course_name', sa.String(), nullable=False),
    sa.Column('course_description', sa.String(), nullable=True),
    sa.Column('program_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['programs.program_id'], ),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('instructor_courses',
    sa.Column('instructor_course_id', sa.UUID(), nullable=False),
    sa.Column('instructor_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['instructor_id'], ['instructors.instructor_id'], ),
    sa.PrimaryKeyConstraint('instructor_course_id')
    )
    op.create_table('students',
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('student_roll_number', sa.String(), nullable=True),
    sa.Column('program_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('verified_email', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('user_type', sa.Enum('ADMIN', 'MOD', 'STUDENT', 'INSTRUCTOR', name='usertype'), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('father_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['program_id'], ['programs.program_id'], ),
    sa.PrimaryKeyConstraint('student_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('topics',
    sa.Column('topic_id', sa.UUID(), nullable=False),
    sa.Column('topic_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('course_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ),
    sa.PrimaryKeyConstraint('topic_id')
    )
    op.create_table('quizzes',
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('quiz_name', sa.String(), nullable=False),
    sa.Column('quiz_description', sa.String(), nullable=True),
    sa.Column('quiz_topic_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_topic_id'], ['topics.topic_id'], ),
    sa.PrimaryKeyConstraint('quiz_id')
    )
    op.create_table('questions',
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('question_text', sa.String(), nullable=False),
    sa.Column('question_type', sa.Enum('SINGLE_SLETECT', 'MULTIPE_SELECT', 'FREE_TEXT', 'CODING', name='questiontype'), nullable=False),
    sa.Column('question_points', sa.String(), nullable=False),
    sa.Column('question_quiz_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_quiz_id'], ['quizzes.quiz_id'], ),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_table('answer_sheets',
    sa.Column('answer_sheet_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=True),
    sa.Column('student_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.question_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
    sa.PrimaryKeyConstraint('answer_sheet_id')
    )
    op.create_table('free_text_questions',
    sa.Column('free_text_question_id', sa.UUID(), nullable=False),
    sa.Column('free_text_question_text', sa.String(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.question_id'], ),
    sa.PrimaryKeyConstraint('free_text_question_id')
    )
    op.create_table('options',
    sa.Column('option_id', sa.UUID(), nullable=False),
    sa.Column('option_text', sa.String(), nullable=False),
    sa.Column('option_is_correct', sa.Boolean(), nullable=False),
    sa.Column('option_question_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['option_question_id'], ['questions.question_id'], ),
    sa.PrimaryKeyConstraint('option_id')
    )
    op.create_table('free_text_answer_sheets',
    sa.Column('free_text_answer_sheet_id', sa.UUID(), nullable=False),
    sa.Column('free_text_answer', sa.String(), nullable=False),
    sa.Column('answer_sheet_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['answer_sheet_id'], ['answer_sheets.answer_sheet_id'], ),
    sa.PrimaryKeyConstraint('free_text_answer_sheet_id')
    )
    op.create_table('option_answer_sheets',
    sa.Column('option_answer_sheet_id', sa.UUID(), nullable=False),
    sa.Column('option_id', sa.UUID(), nullable=True),
    sa.Column('answer_sheet_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['answer_sheet_id'], ['answer_sheets.answer_sheet_id'], ),
    sa.ForeignKeyConstraint(['option_id'], ['options.option_id'], ),
    sa.PrimaryKeyConstraint('option_answer_sheet_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('option_answer_sheets')
    op.drop_table('free_text_answer_sheets')
    op.drop_table('options')
    op.drop_table('free_text_questions')
    op.drop_table('answer_sheets')
    op.drop_table('questions')
    op.drop_table('quizzes')
    op.drop_table('topics')
    op.drop_table('students')
    op.drop_table('instructor_courses')
    op.drop_table('courses')
    op.drop_table('universities')
    op.drop_table('qualifications')
    op.drop_table('programs')
    op.drop_table('interests')
    op.drop_table('instructors')
    # ### end Alembic commands ###
